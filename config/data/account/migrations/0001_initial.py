# Generated by Django 5.1.5 on 2025-04-11 10:32

import data.account.managers
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('filial', '0001_initial'),
        ('upload', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('extra_number', models.CharField(blank=True, max_length=255, null=True)),
                ('chat_id', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_call_center', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('CALL_OPERATOR', 'Call Center'), ('ADMINISTRATOR', 'Sales Menejeri'), ('SERVICE_MANAGER', 'Service Manager'), ('ACCOUNTING', 'Accounting'), ('ATTENDANCE_MANAGER', 'Attendance Manager'), ('FILIAL_Manager', 'Filial Manager'), ('HEAD_TEACHER', 'Head Teacher'), ('MONITORING_MANAGER', 'Monitoring Manager'), ('TESTOLOG', 'Testolog'), ('TEACHER', 'Teacher'), ('ASSISTANT', 'Assistant teacher'), ('MULTIPLE_FILIAL_MANAGER', 'Multiple Filial Manager'), ('DIRECTOR', 'Director'), ('Student', 'Student'), ('Parents', 'Parents')], default='DIRECTOR', max_length=30)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('salary', models.FloatField(default=0)),
                ('ball', models.FloatField(default=0)),
                ('monitoring', models.FloatField(default=0)),
                ('enter', models.TimeField(blank=True, null=True)),
                ('leave', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('files', models.ManyToManyField(blank=True, related_name='account_files', to='upload.file')),
                ('filial', models.ManyToManyField(blank=True, related_name='users_filials', to='filial.filial')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='upload.file')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-created_at',),
            },
            managers=[
                ('objects', data.account.managers.UserManager()),
            ],
        ),
    ]
