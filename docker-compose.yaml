services:

#    postgres:
#        image: postgres:latest
#        container_name: "postgres_f"
#        environment:
#            - POSTGRES_DB=${POSTGRES_DB}
#            - POSTGRES_USER=${POSTGRES_USER}
#            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#            - TZ=Asia/Tashkent
#        volumes:
#            - "../app_data:/var/lib/postgresql/data"
#        ports:
#            - "5433:5432"
#        command: postgres -c max_connections=1500

#    fast:
#      container_name: fast_api
#      build:
#        context: ./config
#      command: python /usr/src/app/root/fast_run.py
#      volumes:
#        - ./config:/usr/src/app
#      ports:
#        - "5000:5000"
##      depends_on:
##        - postgres


    bot:
      build:
          context: ./config
      container_name: tg_bot
      env_file:
          - .env
      depends_on:
        - redis
      volumes: &shared_volumes
        - ./config:/usr/src/app

      command: python manage.py bot


    django:
        container_name: django_f
        build:
            context: ./config
        command: python manage.py runserver 0.0.0.0:8000

        volumes: &shared_volumes
            - ./config:/usr/src/app
        ports:
            - 8001:8000
        env_file:
            - .env
#        depends_on:
#            - postgres

    redis:
      image: redis:alpine
      restart: always
      container_name: redis
      ports:
        - "6378:6379"


    celery:
      build:
        context: ./config
      container_name: celery_worker
      restart: always
      command: celery --app=root.celery worker --loglevel=info  # Use the correct app path
      env_file:
        - .env
      environment:
        REDIS_HOST: redis
        REDIS_PORT: 6379
      depends_on:
        - redis
      volumes: *shared_volumes

    celery_beat:
      build:
        context: ./config
      container_name: celery_beat
      restart: always
      command: celery --app=root.celery beat --loglevel=info  # Use the correct app path
      env_file:
        - .env
      depends_on:
        - redis
        - celery
      volumes: *shared_volumes


