# Generated by Django 5.1.5 on 2025-03-10 17:57

import datetime
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filial', '0001_initial'),
        ('marketing_channel', '0001_initial'),
        ('subject', '0001_initial'),
        ('upload', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(default=datetime.datetime(2025, 3, 10, 17, 57, 53, 476360))),
                ('password', models.CharField(blank=True, default='6b86b273ff34fce19d6b804eff5a3f5747ada4eaa22f1d49c01e52ddb7875b4b', max_length=100, null=True)),
                ('education_lang', models.CharField(choices=[('ENG', 'ENG'), ('RU', 'RU'), ('UZB', 'UZB')], default='UZB', max_length=100)),
                ('student_type', models.CharField(default='student', max_length=100)),
                ('edu_class', models.CharField(choices=[('SCHOOL', 'School'), ('UNIVERSITY', 'University'), ('NONE', 'None')], default='NONE', help_text='Education level at school if student studies at school', max_length=100)),
                ('edu_level', models.CharField(blank=True, max_length=100, null=True)),
                ('ball', models.IntegerField(blank=True, default=0, help_text='Earned ball at competition', null=True)),
                ('student_stage_type', models.CharField(choices=[('NEW_STUDENT', 'NEW_STUDENT'), ('ACTIVE_STUDENT', 'ACTIVE_STUDENT')], default='NEW_STUDENT', help_text='Student stage type', max_length=100)),
                ('new_student_stages', models.CharField(blank=True, choices=[('BIRINCHI_DARS', 'BIRNCHI_DARS'), ("GURUH_O'ZGARTIRGAN", "GURUH_O'ZGARTIRGAN"), ('QARIZDOR', 'QARIZDOR')], default='BIRNCHI_DARS', help_text='Student stage type', max_length=100, null=True)),
                ('balance', models.FloatField(default=0)),
                ('balance_status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='INACTIVE', help_text='Balance status', max_length=100)),
                ('is_archived', models.BooleanField(default=False, help_text='Is this student archived or not')),
                ('is_frozen', models.BooleanField(default=False, help_text='Is this student frozen or not')),
                ('call_operator', models.ForeignKey(blank=True, help_text='Call operator', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_call_operator', to=settings.AUTH_USER_MODEL)),
                ('file', models.ManyToManyField(blank=True, help_text='File for this student', related_name='student_files', to='upload.file')),
                ('filial', models.ForeignKey(blank=True, help_text='Filial for this student', null=True, on_delete=django.db.models.deletion.CASCADE, to='filial.filial')),
                ('marketing_channel', models.ForeignKey(blank=True, help_text='Marketing channel for this student', null=True, on_delete=django.db.models.deletion.CASCADE, to='marketing_channel.marketingchannel')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students_photo', to='upload.file')),
                ('sales_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service_manager', models.ForeignKey(blank=True, help_text='service_manager for this student', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_service_manager', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, help_text='Subject that student won at competition', null=True, on_delete=django.db.models.deletion.SET_NULL, to='subject.subject')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
    ]
